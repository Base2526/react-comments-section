{"version":3,"sources":["../../src/components/ActionContext.js","../../src/components/InputField.js","../../src/components/ModalStyles.js","../../src/components/CommentStructure.js","../../src/components/DisplayComments.js","../../src/index.js","App.js","index.js"],"names":["ActionContext","createContext","ActionProvider","children","currentUser","setComment","comments","useState","replies","setReplies","value","onSubmit","text","parentId","child","newList","index","x","userId","comId","uuid","avatarUrl","fullName","newReplies","userImg","handleReply","id","handleCancel","i","onEdit","replyIndex","onDelete","filter","InputField","cancellor","handleCancelEdit","edit","main","setText","useEffect","actions","useContext","className","styles","style","marginLeft","src","width","height","borderRadius","alt","type","placeholder","component","onChange","e","onClick","disabled","backgroundColor","modal","fontSize","modalClose","cursor","position","display","padding","lineHeight","right","top","background","border","outline","modalHeader","borderBottom","textAlign","modalContent","modalActions","margin","modalActionBtn","modalDelBtn","CommentStructure","reply","handleEdit","marginTop","icon","size","color","role","trigger","nested","close","DisplayComments","setEdit","handleAction","handleCancelAction","key","a","CommentSection","commentsArray","setComments","authorImg","App","data","comment","count","map","name","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1381e7e8.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react'\nimport uuid from 'react-uuid'\n\nexport const ActionContext = createContext()\nexport const ActionProvider = ({\n  children,\n  currentUser,\n  setComment,\n  comments\n}) => {\n  const [replies, setReplies] = useState([])\n  const handleReply = (id) => {\n    setReplies([...replies, id])\n  }\n  const handleCancel = (id) => {\n    const list = [...replies]\n    const newList = list.filter((i) => i !== id)\n    setReplies(newList)\n  }\n\n  const onSubmit = (text, parentId, child) => {\n    if (text.length > 0) {\n      if (!parentId && !child) {\n        setComment([\n          ...comments,\n          {\n            userId: currentUser.userId,\n            comId: uuid(),\n            avatarUrl: currentUser.avatarUrl,\n            fullName: currentUser.name,\n            text: text\n          }\n        ])\n      } else if (parentId && child) {\n        const newList = [...comments]\n        const index = newList.findIndex((x) => x.comId === parentId)\n        newList[index].replies.push({\n          userId: currentUser.userId,\n          comId: uuid(),\n          avatarUrl: currentUser.avatarUrl,\n          fullName: currentUser.name,\n          text: text\n        })\n        setComment(newList)\n      } else if (parentId && !child) {\n        const newList = [...comments]\n        const index = newList.findIndex((x) => x.comId === parentId)\n        const newReplies =\n          newList[index].replies === undefined\n            ? []\n            : [...newList[index].replies]\n        newReplies.push({\n          userId: currentUser.userId,\n          comId: uuid(),\n          avatarUrl: currentUser.avatarUrl,\n          fullName: currentUser.name,\n          text: text\n        })\n        newList[index].replies = newReplies\n        setComment(newList)\n      }\n    }\n  }\n\n  const editText = (id, text, parentId) => {\n    if (parentId === undefined) {\n      const newList = [...comments]\n      const index = newList.findIndex((x) => x.comId === id)\n      newList[index].text = text\n      setComment(newList)\n    } else if (parentId !== undefined) {\n      const newList = [...comments]\n      const index = newList.findIndex((x) => x.comId === parentId)\n      const replyIndex = newList[index].replies.findIndex((i) => i.comId === id)\n      newList[index].replies[replyIndex].text = text\n      setComment(newList)\n    }\n  }\n\n  const deleteText = (id, parentId) => {\n    if (parentId === undefined) {\n      const newList = [...comments]\n      const filter = newList.filter((x) => x.comId !== id)\n      setComment(filter)\n    } else if (parentId !== undefined) {\n      const newList = [...comments]\n      const index = newList.findIndex((x) => x.comId === parentId)\n      const filter = newList[index].replies.filter((x) => x.comId !== id)\n      newList[index].replies = filter\n      setComment(newList)\n    }\n  }\n\n  return (\n    <ActionContext.Provider\n      value={{\n        onSubmit: onSubmit,\n        userImg: currentUser.avatarUrl,\n        userId: currentUser.userId,\n        handleReply: handleReply,\n        handleCancel: handleCancel,\n        replies: replies,\n        setReplies: setReplies,\n        onEdit: editText,\n        onDelete: deleteText\n      }}\n    >\n      {children}\n    </ActionContext.Provider>\n  )\n}\n","import React, { useContext, useState, useEffect } from 'react'\nimport styles from '../Style.scss'\nimport { ActionContext } from './ActionContext'\n\nconst InputField = ({\n  cancellor,\n  parentId,\n  child,\n  value,\n  handleCancelEdit,\n  edit,\n  main\n}) => {\n  const [text, setText] = useState('')\n\n  const handleChange = (e) => {\n    setText(e.target.value)\n  }\n\n  useEffect(() => {\n    setText(value)\n  }, [value])\n\n  const actions = useContext(ActionContext)\n  return (\n    <form\n      className={styles.form}\n      style={\n        !child && !edit && main === undefined\n          ? { marginLeft: 36 }\n          : { marginLeft: 8 }\n      }\n    >\n      <div className={styles.userImg}>\n        <img\n          src={actions.userImg}\n          style={{ width: 38, height: 38, borderRadius: 38 / 2 }}\n          alt='userIcon'\n        />\n      </div>\n      <input\n        className={styles.postComment}\n        type='text'\n        placeholder='Type your reply here.'\n        component='input'\n        value={text}\n        onChange={handleChange}\n      />\n      <div className={styles.inputActions}>\n        <button\n          className={styles.postBtn}\n          onClick={() =>\n            edit === true\n              ? (actions.onEdit(cancellor, text, parentId),\n                handleCancelEdit(cancellor),\n                setText(''))\n              : (actions.onSubmit(text, parentId, child && child),\n                actions.handleCancel(cancellor),\n                setText(''))\n          }\n          type='button'\n          disabled={!text}\n          style={\n            !text\n              ? { backgroundColor: '#84dcff' }\n              : { backgroundColor: '#30c3fd' }\n          }\n        >\n          Post\n        </button>\n        {(text || parentId) && (\n          <button\n            className={styles.cancelBtn}\n            onClick={() =>\n              handleCancelEdit\n                ? handleCancelEdit(cancellor)\n                : actions.handleCancel(cancellor)\n            }\n          >\n            Cancel\n          </button>\n        )}\n      </div>\n    </form>\n  )\n}\n\nexport default InputField\n","export const modal = {\n  fontSize: '16px'\n}\n\nexport const modalClose = {\n  cursor: 'pointer',\n  position: 'absolute',\n  display: 'block',\n  padding: '2px 5px',\n  lineHeight: '20px',\n  right: '-10px',\n  top: '-10px',\n  fontSize: '24px',\n  background: '#ffffff',\n  borderRadius: '18px',\n  border: '1px solid #cfcece',\n  outline: 'none'\n}\n\nexport const modalHeader = {\n  width: '100%',\n  borderBottom: '1px solid gray',\n  fontSize: '18px',\n  textAlign: 'center',\n  padding: '5px'\n}\nexport const modalContent = {\n  width: '100%',\n  padding: '10px 10px'\n}\n\nexport const modalActions = {\n  width: ' 100%',\n  padding: ' 10px 5px',\n  margin: ' auto',\n  textAlign: ' center'\n}\n\nexport const modalActionBtn = {\n  backgroundColor: 'transparent',\n  outline: 'none',\n  border: '1px solid gray',\n  padding: '4px 12px',\n  cursor: 'pointer'\n}\n\nexport const modalDelBtn = {\n  backgroundColor: 'transparent',\n  outline: 'none',\n  border: '1px solid gray',\n  marginLeft: '10px',\n  padding: '4px 12px',\n  cursor: 'pointer'\n}\n","import React, { useContext } from 'react'\nimport styles from '../Style.scss'\nimport Popup from 'reactjs-popup'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faReply, faEllipsisV } from '@fortawesome/free-solid-svg-icons'\nimport {\n  modal,\n  modalClose,\n  modalHeader,\n  modalContent,\n  modalActions,\n  modalActionBtn,\n  modalDelBtn\n} from './ModalStyles'\nimport { ActionContext } from './ActionContext'\n\nconst CommentStructure = ({ i, reply, handleReply, handleEdit, parentId }) => {\n  const actions = useContext(ActionContext)\n\n  return (\n    <div className={styles.halfDiv}>\n      <div\n        className={styles.userInfo}\n        style={reply && { marginLeft: 15, marginTop: '6px' }}\n      >\n        <div>{i.text}</div>\n        <div className={styles.commentsTwo}>\n          <div>\n            <img\n              src={i.avatarUrl}\n              style={{ width: 24, height: 24, borderRadius: 24 / 2 }}\n              alt='userIcon'\n            />\n          </div>\n          <div className={styles.fullName}>{i.fullName} </div>\n          <div>\n            <button\n              className={styles.replyBtn}\n              onClick={() => handleReply(i.comId)}\n            >\n              {' '}\n              <FontAwesomeIcon icon={faReply} size='1x' color='#a5a5a5' /> Reply\n            </button>\n          </div>\n        </div>\n      </div>\n      <div className={styles.userActions}>\n        {actions.userId === i.userId && (\n          <Popup\n            role='tooltip'\n            trigger={\n              <button className={styles.actionsBtn}>\n                <FontAwesomeIcon icon={faEllipsisV} size='1x' color='#b9b9b9' />\n              </button>\n            }\n            position='right center'\n            nested\n          >\n            <div className={styles.actionDiv}>\n              <div>\n                <button\n                  className={styles.editBtn}\n                  onClick={() => handleEdit(i.comId)}\n                >\n                  {' '}\n                  edit\n                </button>\n              </div>\n              <div>\n                <Popup\n                  trigger={\n                    <button className={styles.deleteBtn}> delete</button>\n                  }\n                  modal\n                  nested\n                >\n                  {(close) => (\n                    <div className='modal' style={modal}>\n                      <button\n                        className='close'\n                        onClick={close}\n                        style={modalClose}\n                      >\n                        &times;\n                      </button>\n                      <div className='header' style={modalHeader}>\n                        {' '}\n                        Delete Comment{' '}\n                      </div>\n                      <div className='content' style={modalContent}>\n                        {' '}\n                        Delete your comment permanently?\n                      </div>\n                      <div className='actions' style={modalActions}>\n                        <button\n                          className='button'\n                          style={modalActionBtn}\n                          onClick={() => {\n                            actions.onDelete(i.comId, parentId)\n                            close()\n                          }}\n                        >\n                          Delete\n                        </button>\n                        <button\n                          className='button'\n                          style={modalDelBtn}\n                          onClick={() => {\n                            close()\n                          }}\n                        >\n                          Cancel\n                        </button>\n                      </div>\n                    </div>\n                  )}\n                </Popup>\n              </div>\n            </div>\n          </Popup>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default CommentStructure\n","import React, { useContext, useState } from 'react'\nimport styles from '../Style.scss'\nimport InputField from './InputField'\nimport { ActionContext } from './ActionContext'\nimport 'reactjs-popup/dist/index.css'\nimport CommentStructure from './CommentStructure'\n\nconst DisplayComments = ({ comments }) => {\n  const [edit, setEdit] = useState([])\n\n  const handleAction = (id) => {\n    setEdit([...edit, id])\n  }\n  const handleCancelAction = (id) => {\n    const list = [...edit]\n    const newList = list.filter((i) => i !== id)\n    setEdit(newList)\n  }\n  const actions = useContext(ActionContext)\n  return (\n    <div>\n      {comments.map((i, index) => (\n        <div key={i.comId}>\n          {edit.filter((id) => id === i.comId).length !== 0 ? (\n            <InputField\n              cancellor={i.comId}\n              value={i.text}\n              handleCancelEdit={handleCancelAction}\n              edit\n            />\n          ) : (\n            <CommentStructure\n              i={i}\n              handleReply={actions.handleReply}\n              handleEdit={handleAction}\n            />\n          )}\n          {actions.replies.filter((id) => id === i.comId).length !== 0 && (\n            <InputField cancellor={i.comId} parentId={i.comId} />\n          )}\n          <div className={styles.replySection}>\n            {i.replies &&\n              i.replies.map((a, index) => (\n                <div key={a.comId}>\n                  {edit.filter((id) => id === a.comId).length !== 0 ? (\n                    <InputField\n                      cancellor={a.comId}\n                      value={a.text}\n                      handleCancelEdit={handleCancelAction}\n                      edit\n                      parentId={i.comId}\n                    />\n                  ) : (\n                    <CommentStructure\n                      i={a}\n                      reply\n                      parentId={i.comId}\n                      handleReply={actions.handleReply}\n                      handleEdit={handleAction}\n                    />\n                  )}\n                  {actions.replies.filter((id) => id === a.comId).length !==\n                    0 && (\n                    <InputField cancellor={a.comId} parentId={i.comId} child />\n                  )}\n                </div>\n              ))}\n          </div>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default DisplayComments\n","import React, { useEffect, useState } from 'react'\nimport styles from './Style.scss'\nimport InputField from './components/InputField'\nimport DisplayComments from './components/DisplayComments'\nimport { ActionProvider } from './components/ActionContext'\n\nexport const CommentSection = ({ commentsArray, currentUser, setComment }) => {\n  const [comments, setComments] = useState(commentsArray)\n  useEffect(() => {\n    setComments(commentsArray)\n  }, [commentsArray])\n\n  return (\n    <ActionProvider\n      currentUser={currentUser}\n      setComment={setComment}\n      comments={comments}\n    >\n      <div className={styles.section}>\n        <div className={styles.inputBox}>\n          <InputField authorImg={currentUser.avatarUrl} main />\n        </div>\n        <div className={styles.displayComments}>\n          <DisplayComments comments={comments} />\n        </div>\n      </div>\n    </ActionProvider>\n  )\n}\n","import React, { PureComponent, useState } from 'react'\nimport data from \"./data.json\"\nimport { CommentSection } from 'react-comments'\nimport 'react-comments/dist/index.css'\nimport \"./App.css\"\n\n\n const App = () => {\n   const [comment, setComment] = useState(data)\n   const userId = \"01a\"\n   const avatarUrl = \"https://ui-avatars.com/api/name=Riya&background=random\"\n   const name = \"xyz\"\n   let count = 0\n   comment.map(i => {count+=1; i.replies && i.replies.map(i=> count+=1)} )\n\n   return <div className=\"commentSection\">\n <div className=\"header\">{count} Comments</div>\n\n <CommentSection currentUser={{ userId: userId, avatarUrl: avatarUrl, name:name }} commentsArray={comment}\n setComment={setComment} />\n     </div>\n }\n\n// class App extends PureComponent{\n//   state={ \n//     comment : data\n//   }\n\n//   handleState=(value)=>{\n//     this.setState({comment:value})\n//   }\n\n//   render() {\n//     const userId = \"01a\"\n//     const avatarUrl = \"https://ui-avatars.com/api/name=Riya&background=random\"\n//     const name = \"xyz\"\n//     let count = 0\n//    this.state.comment.map(i => {count+=1; i.replies && i.replies.map(i=> count+=1)} )\n\n//     return <div className=\"commentSection\">\n//      <div className=\"header\">{count} Comments</div>\n    \n//      <CommentSection currentUser={{ userId: userId, avatarUrl: avatarUrl, name:name }} commentsArray={this.state.comment}\n//      setComment={this.handleState} />\n//          </div>\n// }\n// }\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}