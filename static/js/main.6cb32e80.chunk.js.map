{"version":3,"sources":["../../src/components/ActionContext.js","../../src/components/InputField.js","../../src/components/ModalStyles.js","../../src/components/DisplayComments.js","../../src/index.js","App.js","index.js"],"names":["ActionContext","createContext","ActionProvider","children","onSubmit","currentUser","onEdit","onDelete","useState","replies","setReplies","value","userImg","userId","handleReply","id","handleCancel","newList","i","InputField","cancellor","parentId","child","handleCancelEdit","edit","text","setText","useEffect","actions","useContext","console","className","styles","src","style","width","height","borderRadius","alt","type","placeholder","component","onChange","e","onClick","modal","fontSize","modalClose","cursor","position","display","padding","lineHeight","right","top","background","border","outline","modalHeader","borderBottom","textAlign","modalContent","modalActions","margin","modalActionBtn","backgroundColor","modalDelBtn","marginLeft","CommentStructure","reply","handleEdit","icon","size","color","role","trigger","nested","close","DisplayComments","comments","setEdit","handleAction","handleCancelAction","key","comId","a","CommentSection","commentsArray","editText","deleteText","setComments","authorImg","avatarUrl","App","data","comment","setComment","length","uuid","fullName","index","findIndex","x","push","newReplies","undefined","replyIndex","filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6cb32e80.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react'\n\nexport const ActionContext = createContext()\nexport const ActionProvider = ({\n  children,\n  onSubmit,\n  currentUser,\n  onEdit,\n  onDelete\n}) => {\n  const [replies, setReplies] = useState([])\n  const handleReply = (id) => {\n    setReplies([...replies, id])\n  }\n  const handleCancel = (id) => {\n    const list = [...replies]\n    const newList = list.filter((i) => i !== id)\n    setReplies(newList)\n  }\n\n  return (\n    <ActionContext.Provider\n      value={{\n        onSubmit: onSubmit,\n        userImg: currentUser.avatarUrl,\n        userId: currentUser.userId,\n        handleReply: handleReply,\n        handleCancel: handleCancel,\n        replies: replies,\n        setReplies: setReplies,\n        onEdit: onEdit,\n        onDelete: onDelete\n      }}\n    >\n      {children}\n    </ActionContext.Provider>\n  )\n}\n","import React, { useContext, useState, useEffect } from 'react'\nimport styles from '../Style.scss'\nimport { ActionContext } from './ActionContext'\n\nconst InputField = ({\n  cancellor,\n  parentId,\n  child,\n  value,\n  handleCancelEdit,\n  edit\n}) => {\n  const [text, setText] = useState('')\n\n  const handleChange = (e) => {\n    setText(e.target.value)\n  }\n\n  useEffect(() => {\n    setText(value)\n  }, [value])\n\n  const actions = useContext(ActionContext)\n\n  console.log('edit', edit)\n  return (\n    <form className={styles.form}>\n      <div className={styles.userImg}>\n        <img\n          src={actions.userImg}\n          style={{ width: 36, height: 36, borderRadius: 36 / 2 }}\n          alt='userIcon'\n        />\n      </div>\n      <input\n        className={styles.postComment}\n        type='text'\n        placeholder='Type your reply here.'\n        component='input'\n        value={text}\n        onChange={handleChange}\n      />\n      <div className={styles.inputActions}>\n        <div\n          className={styles.postBtn}\n          onClick={() =>\n            edit === true\n              ? (actions.onEdit(cancellor, text, parentId),\n                handleCancelEdit(cancellor))\n              : (actions.onSubmit(text, parentId, child && child),\n                actions.handleCancel(cancellor))\n          }\n        >\n          Post\n        </div>\n        <div\n          className={styles.cancelBtn}\n          onClick={() =>\n            handleCancelEdit\n              ? handleCancelEdit(cancellor)\n              : actions.handleCancel(cancellor)\n          }\n        >\n          Cancel\n        </div>\n      </div>\n    </form>\n  )\n}\n\nexport default InputField\n","export const modal = {\n  fontSize: '16px'\n}\n\nexport const modalClose = {\n  cursor: 'pointer',\n  position: 'absolute',\n  display: 'block',\n  padding: '2px 5px',\n  lineHeight: '20px',\n  right: '-10px',\n  top: '-10px',\n  fontSize: '24px',\n  background: '#ffffff',\n  borderRadius: '18px',\n  border: '1px solid #cfcece',\n  outline: 'none'\n}\n\nexport const modalHeader = {\n  width: '100%',\n  borderBottom: '1px solid gray',\n  fontSize: '18px',\n  textAlign: 'center',\n  padding: '5px'\n}\nexport const modalContent = {\n  width: '100%',\n  padding: '10px 10px'\n}\n\nexport const modalActions = {\n  width: ' 100%',\n  padding: ' 10px 5px',\n  margin: ' auto',\n  textAlign: ' center'\n}\n\nexport const modalActionBtn = {\n  backgroundColor: 'transparent',\n  outline: 'none',\n  border: '1px solid gray',\n  padding: '4px 12px',\n  cursor: 'pointer'\n}\n\nexport const modalDelBtn = {\n  backgroundColor: 'transparent',\n  outline: 'none',\n  border: '1px solid gray',\n  marginLeft: '10px',\n  padding: '4px 12px',\n  cursor: 'pointer'\n}\n","import React, { useContext, useState } from 'react'\nimport styles from '../Style.scss'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faReply, faEllipsisV } from '@fortawesome/free-solid-svg-icons'\nimport InputField from './InputField'\nimport { ActionContext } from './ActionContext'\nimport Popup from 'reactjs-popup'\nimport 'reactjs-popup/dist/index.css'\nimport {\n  modal,\n  modalClose,\n  modalHeader,\n  modalContent,\n  modalActions,\n  modalActionBtn,\n  modalDelBtn\n} from './ModalStyles'\n\nconst CommentStructure = ({ i, reply, handleReply, handleEdit, parentId }) => {\n  const actions = useContext(ActionContext)\n\n  return (\n    <div className={styles.halfDiv}>\n      <div className={styles.userInfo} style={reply && { marginLeft: 15 }}>\n        <div>{i.text}</div>\n        <div className={styles.commentsTwo}>\n          <div>\n            <img\n              src={i.avatarUrl}\n              style={{ width: 20, height: 20, borderRadius: 20 / 2 }}\n              alt='userIcon'\n            />\n          </div>\n          <div className={styles.fullName}>{i.fullName} </div>\n          <div>\n            <button\n              className={styles.replyBtn}\n              onClick={() => handleReply(i.comId)}\n            >\n              {' '}\n              <FontAwesomeIcon icon={faReply} size='1x' color='#a5a5a5' /> Reply\n            </button>\n          </div>\n        </div>\n      </div>\n      <div className={styles.userActions}>\n        {actions.userId === i.userId && (\n          <Popup\n            role='tooltip'\n            trigger={\n              <button className={styles.actionsBtn}>\n                <FontAwesomeIcon icon={faEllipsisV} size='1x' color='#b9b9b9' />\n              </button>\n            }\n            position='right center'\n            nested\n          >\n            <div className={styles.actionDiv}>\n              <div>\n                <button\n                  className={styles.editBtn}\n                  onClick={() => handleEdit(i.comId)}\n                >\n                  {' '}\n                  edit\n                </button>\n              </div>\n              <div>\n                <Popup\n                  trigger={\n                    <button className={styles.deleteBtn}> delete</button>\n                  }\n                  modal\n                  nested\n                >\n                  {(close) => (\n                    <div className='modal' style={modal}>\n                      <button\n                        className='close'\n                        onClick={close}\n                        style={modalClose}\n                      >\n                        &times;\n                      </button>\n                      <div className='header' style={modalHeader}>\n                        {' '}\n                        Delete Comment{' '}\n                      </div>\n                      <div className='content' style={modalContent}>\n                        {' '}\n                        Delete your comment permanently?\n                      </div>\n                      <div className='actions' style={modalActions}>\n                        <button\n                          className='button'\n                          style={modalActionBtn}\n                          onClick={() => {\n                            actions.onDelete(i.comId, parentId)\n                            close()\n                          }}\n                        >\n                          Delete\n                        </button>\n                        <button\n                          className='button'\n                          style={modalDelBtn}\n                          onClick={() => {\n                            close()\n                          }}\n                        >\n                          Cancel\n                        </button>\n                      </div>\n                    </div>\n                  )}\n                </Popup>\n              </div>\n            </div>\n          </Popup>\n        )}\n      </div>\n    </div>\n  )\n}\n\nconst DisplayComments = ({ comments }) => {\n  const [edit, setEdit] = useState([])\n\n  const handleAction = (id) => {\n    setEdit([...edit, id])\n  }\n  const handleCancelAction = (id) => {\n    const list = [...edit]\n    const newList = list.filter((i) => i !== id)\n    setEdit(newList)\n  }\n  const actions = useContext(ActionContext)\n  return (\n    <div>\n      {comments.map((i, index) => (\n        <div key={i.comId}>\n          {edit.filter((id) => id === i.comId).length !== 0 ? (\n            <InputField\n              cancellor={i.comId}\n              value={i.text}\n              handleCancelEdit={handleCancelAction}\n              edit\n            />\n          ) : (\n            <CommentStructure\n              i={i}\n              handleReply={actions.handleReply}\n              handleEdit={handleAction}\n            />\n          )}\n          {actions.replies.filter((id) => id === i.comId).length !== 0 && (\n            <InputField cancellor={i.comId} parentId={i.comId} />\n          )}\n          <div className={styles.replySection}>\n            {i.replies &&\n              i.replies.map((a, index) => (\n                <div key={a.comId}>\n                  {edit.filter((id) => id === a.comId).length !== 0 ? (\n                    <InputField\n                      cancellor={a.comId}\n                      value={a.text}\n                      handleCancelEdit={handleCancelAction}\n                      edit\n                      parentId={i.comId}\n                    />\n                  ) : (\n                    <CommentStructure\n                      i={a}\n                      reply\n                      parentId={i.comId}\n                      handleReply={actions.handleReply}\n                      handleEdit={handleAction}\n                    />\n                  )}\n                  {actions.replies.filter((id) => id === a.comId).length !==\n                    0 && (\n                    <InputField cancellor={a.comId} parentId={i.comId} child />\n                  )}\n                </div>\n              ))}\n          </div>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default DisplayComments\n","import React, { useEffect, useState } from 'react'\nimport styles from './Style.scss'\nimport InputField from './components/InputField'\nimport DisplayComments from './components/DisplayComments'\nimport { ActionProvider } from './components/ActionContext'\n\nexport const CommentSection = ({\n  commentsArray,\n  currentUser,\n  onSubmit,\n  editText,\n  deleteText\n}) => {\n  const [comments, setComments] = useState(commentsArray)\n  useEffect(() => {\n    setComments(commentsArray)\n  }, [commentsArray])\n\n  return (\n    <ActionProvider\n      onSubmit={onSubmit}\n      currentUser={currentUser}\n      onEdit={editText}\n      onDelete={deleteText}\n    >\n      <div className={styles.section}>\n        <div className={styles.inputBox}>\n          <InputField onSubmit={onSubmit} authorImg={currentUser.avatarUrl} />\n        </div>\n        <div className={styles.displayComments}>\n          <DisplayComments comments={comments} />\n        </div>\n      </div>\n    </ActionProvider>\n  )\n}\n","import React, { useState } from 'react'\nimport data from \"./data.json\"\nimport { CommentSection } from 'react-comments'\nimport 'react-comments/dist/index.css'\nimport uuid from 'react-uuid'\n\n\nconst App = () => {\n  const [comment, setComment] = useState(data)\n  const userId = \"01a\"\n  const avatarUrl = \"https://avatars.dicebear.com/4.5/api/bottts/Riya_GeS43.svg\"\n  const name = \"xyz\"\n\n  return <CommentSection currentUser={{ userId: userId, avatarUrl: avatarUrl }} commentsArray={comment}\n    onSubmit={(text, parentId, child) => {\n      if (text.length > 0) {\n        if (!parentId && !child) {\n          setComment([...comment,\n          {\n            userId: userId,\n            comId: uuid(),\n            avatarUrl: avatarUrl,\n            fullName: name,\n            text: text\n          }]\n          );\n          return\n        }\n        else if (parentId && child) {\n          const newList = [...comment]\n          let index = newList.findIndex(x => x.comId === parentId)\n          newList[index].replies.push({\n            userId: userId,\n            comId: uuid(),\n            avatarUrl: avatarUrl,\n            fullName: name,\n            text: text\n          })\n          setComment(newList)\n          return\n        }\n        else if (parentId && !child) {\n          let newList = [...comment]\n          let index = newList.findIndex(x => x.comId === parentId)\n          let newReplies = newList[index].replies === undefined ? [] : [...newList[index].replies]\n          newReplies.push({\n            userId: userId,\n            comId: uuid(),\n            avatarUrl: avatarUrl,\n            fullName: name,\n            text: text\n          })\n          newList[index].replies = newReplies\n          setComment(newList)\n          return\n        }\n      }\n    }} editText={(id, text, parentId) => {\n      if (parentId === undefined) {\n        let newList = [...comment]\n        let index = newList.findIndex(x => x.comId === id)\n        newList[index].text = text\n        setComment(newList)\n      }\n      else if (parentId !== undefined) {\n        let newList = [...comment]\n        let index = newList.findIndex(x => x.comId === parentId)\n        let replyIndex = newList[index].replies.findIndex(i => i.comId === id)\n        newList[index].replies[replyIndex].text = text\n        setComment(newList)\n      }\n    }\n    } deleteText={(id, parentId) => {\n      if (parentId === undefined) {\n        let newList = [...comment]\n        let filter = newList.filter(x => x.comId !== id)\n        setComment(filter)\n      }\n      else if (parentId !== undefined) {\n        let newList = [...comment]\n        let index = newList.findIndex(x => x.comId === parentId)\n        let filter = newList[index].replies.filter(x => x.comId !== id)\n        newList[index].replies = filter\n        setComment(newList)\n      }\n    }\n    } />\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}