{"version":3,"sources":["../../src/components/ActionContext.js","../../src/components/InputField.js","../../src/components/ModalStyles.js","../../src/components/DisplayComments.js","../../src/index.js","App.js","index.js"],"names":["ActionContext","createContext","ActionProvider","children","onSubmit","currentUser","onEdit","onDelete","useState","replies","setReplies","value","userImg","userId","handleReply","id","handleCancel","newList","i","InputField","cancellor","parentId","child","handleCancelEdit","edit","text","setText","useEffect","actions","useContext","className","styles","src","style","width","height","borderRadius","alt","type","placeholder","component","onChange","e","onClick","disabled","backgroundColor","modal","fontSize","modalClose","cursor","position","display","padding","lineHeight","right","top","background","border","outline","modalHeader","borderBottom","textAlign","modalContent","modalActions","margin","modalActionBtn","modalDelBtn","marginLeft","CommentStructure","reply","handleEdit","marginTop","icon","size","color","role","trigger","nested","close","DisplayComments","comments","setEdit","handleAction","handleCancelAction","key","comId","a","CommentSection","commentsArray","editText","deleteText","setComments","authorImg","avatarUrl","App","data","comment","setComment","count","map","length","uuid","fullName","index","findIndex","x","push","newReplies","undefined","replyIndex","filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9dd6bf20.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react'\n\nexport const ActionContext = createContext()\nexport const ActionProvider = ({\n  children,\n  onSubmit,\n  currentUser,\n  onEdit,\n  onDelete\n}) => {\n  const [replies, setReplies] = useState([])\n  const handleReply = (id) => {\n    setReplies([...replies, id])\n  }\n  const handleCancel = (id) => {\n    const list = [...replies]\n    const newList = list.filter((i) => i !== id)\n    setReplies(newList)\n  }\n\n  return (\n    <ActionContext.Provider\n      value={{\n        onSubmit: onSubmit,\n        userImg: currentUser.avatarUrl,\n        userId: currentUser.userId,\n        handleReply: handleReply,\n        handleCancel: handleCancel,\n        replies: replies,\n        setReplies: setReplies,\n        onEdit: onEdit,\n        onDelete: onDelete\n      }}\n    >\n      {children}\n    </ActionContext.Provider>\n  )\n}\n","import React, { useContext, useState, useEffect } from 'react'\nimport styles from '../Style.scss'\nimport { ActionContext } from './ActionContext'\n\nconst InputField = ({\n  cancellor,\n  parentId,\n  child,\n  value,\n  handleCancelEdit,\n  edit\n}) => {\n  const [text, setText] = useState('')\n\n  const handleChange = (e) => {\n    setText(e.target.value)\n  }\n\n  useEffect(() => {\n    setText(value)\n  }, [value])\n\n  const actions = useContext(ActionContext)\n  return (\n    <form className={styles.form}>\n      <div className={styles.userImg}>\n        <img\n          src={actions.userImg}\n          style={{ width: 36, height: 36, borderRadius: 36 / 2 }}\n          alt='userIcon'\n        />\n      </div>\n      <input\n        className={styles.postComment}\n        type='text'\n        placeholder='Type your reply here.'\n        component='input'\n        value={text}\n        onChange={handleChange}\n      />\n      <div className={styles.inputActions}>\n        <button\n          className={styles.postBtn}\n          onClick={() =>\n            edit === true\n              ? (actions.onEdit(cancellor, text, parentId),\n                handleCancelEdit(cancellor))\n              : (actions.onSubmit(text, parentId, child && child),\n                actions.handleCancel(cancellor))\n          }\n          type='button'\n          disabled={!text}\n          style={\n            !text\n              ? { backgroundColor: '#84dcff' }\n              : { backgroundColor: '#30c3fd' }\n          }\n        >\n          Post\n        </button>\n        {(text || parentId) && (\n          <button\n            className={styles.cancelBtn}\n            onClick={() =>\n              handleCancelEdit\n                ? handleCancelEdit(cancellor)\n                : actions.handleCancel(cancellor)\n            }\n          >\n            Cancel\n          </button>\n        )}\n      </div>\n    </form>\n  )\n}\n\nexport default InputField\n","export const modal = {\n  fontSize: '16px'\n}\n\nexport const modalClose = {\n  cursor: 'pointer',\n  position: 'absolute',\n  display: 'block',\n  padding: '2px 5px',\n  lineHeight: '20px',\n  right: '-10px',\n  top: '-10px',\n  fontSize: '24px',\n  background: '#ffffff',\n  borderRadius: '18px',\n  border: '1px solid #cfcece',\n  outline: 'none'\n}\n\nexport const modalHeader = {\n  width: '100%',\n  borderBottom: '1px solid gray',\n  fontSize: '18px',\n  textAlign: 'center',\n  padding: '5px'\n}\nexport const modalContent = {\n  width: '100%',\n  padding: '10px 10px'\n}\n\nexport const modalActions = {\n  width: ' 100%',\n  padding: ' 10px 5px',\n  margin: ' auto',\n  textAlign: ' center'\n}\n\nexport const modalActionBtn = {\n  backgroundColor: 'transparent',\n  outline: 'none',\n  border: '1px solid gray',\n  padding: '4px 12px',\n  cursor: 'pointer'\n}\n\nexport const modalDelBtn = {\n  backgroundColor: 'transparent',\n  outline: 'none',\n  border: '1px solid gray',\n  marginLeft: '10px',\n  padding: '4px 12px',\n  cursor: 'pointer'\n}\n","import React, { useContext, useState } from 'react'\nimport styles from '../Style.scss'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faReply, faEllipsisV } from '@fortawesome/free-solid-svg-icons'\nimport InputField from './InputField'\nimport { ActionContext } from './ActionContext'\nimport Popup from 'reactjs-popup'\nimport 'reactjs-popup/dist/index.css'\nimport {\n  modal,\n  modalClose,\n  modalHeader,\n  modalContent,\n  modalActions,\n  modalActionBtn,\n  modalDelBtn\n} from './ModalStyles'\n\nconst CommentStructure = ({ i, reply, handleReply, handleEdit, parentId }) => {\n  const actions = useContext(ActionContext)\n\n  return (\n    <div className={styles.halfDiv}>\n      <div\n        className={styles.userInfo}\n        style={reply && { marginLeft: 15, marginTop: '6px' }}\n      >\n        <div>{i.text}</div>\n        <div className={styles.commentsTwo}>\n          <div>\n            <img\n              src={i.avatarUrl}\n              style={{ width: 20, height: 20, borderRadius: 20 / 2 }}\n              alt='userIcon'\n            />\n          </div>\n          <div className={styles.fullName}>{i.fullName} </div>\n          <div>\n            <button\n              className={styles.replyBtn}\n              onClick={() => handleReply(i.comId)}\n            >\n              {' '}\n              <FontAwesomeIcon icon={faReply} size='1x' color='#a5a5a5' /> Reply\n            </button>\n          </div>\n        </div>\n      </div>\n      <div className={styles.userActions}>\n        {actions.userId === i.userId && (\n          <Popup\n            role='tooltip'\n            trigger={\n              <button className={styles.actionsBtn}>\n                <FontAwesomeIcon icon={faEllipsisV} size='1x' color='#b9b9b9' />\n              </button>\n            }\n            position='right center'\n            nested\n          >\n            <div className={styles.actionDiv}>\n              <div>\n                <button\n                  className={styles.editBtn}\n                  onClick={() => handleEdit(i.comId)}\n                >\n                  {' '}\n                  edit\n                </button>\n              </div>\n              <div>\n                <Popup\n                  trigger={\n                    <button className={styles.deleteBtn}> delete</button>\n                  }\n                  modal\n                  nested\n                >\n                  {(close) => (\n                    <div className='modal' style={modal}>\n                      <button\n                        className='close'\n                        onClick={close}\n                        style={modalClose}\n                      >\n                        &times;\n                      </button>\n                      <div className='header' style={modalHeader}>\n                        {' '}\n                        Delete Comment{' '}\n                      </div>\n                      <div className='content' style={modalContent}>\n                        {' '}\n                        Delete your comment permanently?\n                      </div>\n                      <div className='actions' style={modalActions}>\n                        <button\n                          className='button'\n                          style={modalActionBtn}\n                          onClick={() => {\n                            actions.onDelete(i.comId, parentId)\n                            close()\n                          }}\n                        >\n                          Delete\n                        </button>\n                        <button\n                          className='button'\n                          style={modalDelBtn}\n                          onClick={() => {\n                            close()\n                          }}\n                        >\n                          Cancel\n                        </button>\n                      </div>\n                    </div>\n                  )}\n                </Popup>\n              </div>\n            </div>\n          </Popup>\n        )}\n      </div>\n    </div>\n  )\n}\n\nconst DisplayComments = ({ comments }) => {\n  const [edit, setEdit] = useState([])\n\n  const handleAction = (id) => {\n    setEdit([...edit, id])\n  }\n  const handleCancelAction = (id) => {\n    const list = [...edit]\n    const newList = list.filter((i) => i !== id)\n    setEdit(newList)\n  }\n  const actions = useContext(ActionContext)\n  return (\n    <div>\n      {comments.map((i, index) => (\n        <div key={i.comId}>\n          {edit.filter((id) => id === i.comId).length !== 0 ? (\n            <InputField\n              cancellor={i.comId}\n              value={i.text}\n              handleCancelEdit={handleCancelAction}\n              edit\n            />\n          ) : (\n            <CommentStructure\n              i={i}\n              handleReply={actions.handleReply}\n              handleEdit={handleAction}\n            />\n          )}\n          {actions.replies.filter((id) => id === i.comId).length !== 0 && (\n            <InputField cancellor={i.comId} parentId={i.comId} />\n          )}\n          <div className={styles.replySection}>\n            {i.replies &&\n              i.replies.map((a, index) => (\n                <div key={a.comId}>\n                  {edit.filter((id) => id === a.comId).length !== 0 ? (\n                    <InputField\n                      cancellor={a.comId}\n                      value={a.text}\n                      handleCancelEdit={handleCancelAction}\n                      edit\n                      parentId={i.comId}\n                    />\n                  ) : (\n                    <CommentStructure\n                      i={a}\n                      reply\n                      parentId={i.comId}\n                      handleReply={actions.handleReply}\n                      handleEdit={handleAction}\n                    />\n                  )}\n                  {actions.replies.filter((id) => id === a.comId).length !==\n                    0 && (\n                    <InputField cancellor={a.comId} parentId={i.comId} child />\n                  )}\n                </div>\n              ))}\n          </div>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default DisplayComments\n","import React, { useEffect, useState } from 'react'\nimport styles from './Style.scss'\nimport InputField from './components/InputField'\nimport DisplayComments from './components/DisplayComments'\nimport { ActionProvider } from './components/ActionContext'\n\nexport const CommentSection = ({\n  commentsArray,\n  currentUser,\n  onSubmit,\n  editText,\n  deleteText\n}) => {\n  const [comments, setComments] = useState(commentsArray)\n  useEffect(() => {\n    setComments(commentsArray)\n  }, [commentsArray])\n\n  return (\n    <ActionProvider\n      onSubmit={onSubmit}\n      currentUser={currentUser}\n      onEdit={editText}\n      onDelete={deleteText}\n    >\n      <div className={styles.section}>\n        <div className={styles.inputBox}>\n          <InputField onSubmit={onSubmit} authorImg={currentUser.avatarUrl} />\n        </div>\n        <div className={styles.displayComments}>\n          <DisplayComments comments={comments} />\n        </div>\n      </div>\n    </ActionProvider>\n  )\n}\n","import React, { useState } from 'react'\nimport data from \"./data.json\"\nimport { CommentSection } from 'react-comments'\nimport 'react-comments/dist/index.css'\nimport uuid from 'react-uuid'\nimport \"./App.css\"\n\n\nconst App = () => {\n  const [comment, setComment] = useState(data)\n  const userId = \"01a\"\n  const avatarUrl = \"https://ui-avatars.com/api/name=Riya&background=random\"\n  const name = \"xyz\"\n  let count = 0\n  comment.map(i => {count+=1; i.replies && i.replies.map(i=> count+=1)} )\n\n  return <div className=\"commentSection\">\n<div className=\"header\">{count} Comments</div>\n\n<CommentSection currentUser={{ userId: userId, avatarUrl: avatarUrl }} commentsArray={comment}\n    onSubmit={(text, parentId, child) => {\n      if (text.length > 0) {\n        if (!parentId && !child) {\n          setComment([...comment,\n          {\n            userId: userId,\n            comId: uuid(),\n            avatarUrl: avatarUrl,\n            fullName: name,\n            text: text\n          }]\n          );\n          return\n        }\n        else if (parentId && child) {\n          const newList = [...comment]\n          let index = newList.findIndex(x => x.comId === parentId)\n          newList[index].replies.push({\n            userId: userId,\n            comId: uuid(),\n            avatarUrl: avatarUrl,\n            fullName: name,\n            text: text\n          })\n          setComment(newList)\n          return\n        }\n        else if (parentId && !child) {\n          let newList = [...comment]\n          let index = newList.findIndex(x => x.comId === parentId)\n          let newReplies = newList[index].replies === undefined ? [] : [...newList[index].replies]\n          newReplies.push({\n            userId: userId,\n            comId: uuid(),\n            avatarUrl: avatarUrl,\n            fullName: name,\n            text: text\n          })\n          newList[index].replies = newReplies\n          setComment(newList)\n          return\n        }\n      }\n    }} editText={(id, text, parentId) => {\n      if (parentId === undefined) {\n        let newList = [...comment]\n        let index = newList.findIndex(x => x.comId === id)\n        newList[index].text = text\n        setComment(newList)\n      }\n      else if (parentId !== undefined) {\n        let newList = [...comment]\n        let index = newList.findIndex(x => x.comId === parentId)\n        let replyIndex = newList[index].replies.findIndex(i => i.comId === id)\n        newList[index].replies[replyIndex].text = text\n        setComment(newList)\n      }\n    }\n    } deleteText={(id, parentId) => {\n      if (parentId === undefined) {\n        let newList = [...comment]\n        let filter = newList.filter(x => x.comId !== id)\n        setComment(filter)\n      }\n      else if (parentId !== undefined) {\n        let newList = [...comment]\n        let index = newList.findIndex(x => x.comId === parentId)\n        let filter = newList[index].replies.filter(x => x.comId !== id)\n        newList[index].replies = filter\n        setComment(newList)\n      }\n    }\n    } />\n    </div>\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}